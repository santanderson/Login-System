{"version":3,"sources":["components/store/reducer.js","components/store/store.js","components/preload/index.js","components/preload/register.js","components/preload/login.js","components/dashboard.js","App.js","index.js"],"names":["REGISTER_USER","require","CHANGE_USER","LOGOUT","initialState","user","email","password","isLogged","createStore","rootReducer","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","persistConfig","key","storage","store","persistReducer","persistor","persistStore","Preload","navigate","useNavigate","data","getState","useEffect","_verify","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","replace","stop","apply","this","verify","react","className","Box","sx","display","justifyContent","height","alignItems","CircularProgress","Register","React","pass","Grid","container","item","width","TextField","required","ref","variant","label","href","Button","onClick","name","current","children","value","mail","alert","dispatch","registerUser","color","size","disableElevation","react_router_dom","to","Login","changeUser","Dashboard","App","react_router","path","element","preload","register","login","dashboard","ReactDOM","createRoot","document","getElementById","render","react_default","a","createElement","StrictMode","react_redux_es","integration_react","loading","src_App"],"mappings":"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","file":"static/js/main.67d1b1ad.chunk.js","sourcesContent":["const redux = require('redux');\n\n//User actions\nconst REGISTER_USER = \"REGISTER_USER\";\nconst CHANGE_USER = \"CHANGE_USER\";\nconst LOGOUT = \"LOGOUT\";\n\n\nexport const registerUser = (user, email, password) => {\n    return {\n        type: REGISTER_USER,\n        user,\n        email,\n        password\n    }\n}\n\nexport const changeUser = (user, email, password) => {\n    return {\n        type: CHANGE_USER,\n        user,\n        email,\n        password\n    }\n}\n\nexport const logOut = () => {\n    return {\n        type: LOGOUT\n    }\n}\n\nconst initialState = {\n    user: \"\",\n    email: \"\",\n    password: \"\",\n    isLogged: false\n}\n\n//Reducers\n\nexport function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return {\n                ...state,\n                user: action.user,\n                email: action.email,\n                password: action.password,\n                isLogged: true\n            }\n        case CHANGE_USER:\n            return {\n                ...state,\n                user: action.user,\n                email: action.email,\n                password: action.password,\n                isLogged: true\n            }\n        case LOGOUT:\n            return {\n                ...state,\n                isLogged: false\n            }\n        default:\n            return state\n    }\n}","import { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {userReducer} from './reducer';\nimport { combineReducers} from 'redux';\nconst redux = require('redux');\nconst createStore = redux.createStore;\n\nconst rootReducer = combineReducers({\n    user: userReducer\n})\n\n//Redux-Persist\n\nconst persistConfig = {\n    key: 'root',\n    storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n//Store\n\nconst store = createStore(persistedReducer);\nconst persistor = persistStore(store);\n\nexport {store, persistor}","import { useEffect } from \"react\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useNavigate } from \"react-router-dom\";\n//Store imports\nimport { store } from \"../store/store\";\n\nconst Preload = () => {\n    let navigate = useNavigate();\n    const data = store.getState();\n    useEffect(() => {\n        async function verify() {\n            if (data.isLogged === true) {\n                navigate(\"dashboard\", {replace: true});//Se o usuário estiver logado, o dashboard será redirecionado.\n            } else {\n                navigate(\"login\", { replace: true });//Se não estiver logado, a tela de login será mostrada.\n            }\n        }\n        verify();\n        });\n    return (\n        <div className=\"preload\">\n            <Box sx={{ display: 'flex', justifyContent: 'center', height: '100vh', alignItems: 'center' }}>\n                <CircularProgress />\n            </Box>\n        </div>\n    )\n};\n\nexport default Preload;","import * as React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport { useNavigate } from \"react-router-dom\";\n//Store imports\nimport { store } from '../store/store';\nimport { registerUser } from '../store/reducer';\n\nconst Register = () => {\n    const navigate = useNavigate();\n    let user = React.useRef();\n    let pass = React.useRef();\n    let email = React.useRef();\n    const data = store.getState();\n\n    const validate = () => {\n        const name = user.current.children[1].children[0].value;\n        const mail = email.current.children[1].children[0].value;\n        const password = pass.current.children[1].children[0].value;\n\n        if (name === data.user || mail === data.email) {\n            alert('Usuário já registrado')\n        } else if (!mail || !password || !name) {\n            alert('Por favor preencha todos os campos!');\n        } else if (password.length < 8) {\n            alert('Senha muito curta! Precisa de 8 caracteres ou mais');\n        } else {\n            store.dispatch(registerUser(name, mail, password));\n            navigate('../dashboard', { replace: true });\n        }\n    };\n    return (\n        <form className=\"Register\">\n            <Grid container\n                className='container'\n            >\n\n                <Grid container item\n                    height=\"170px\"\n                    width=\"300px\"\n                >\n                    <TextField required ref={user} type=\"text\" variant='standard' label=\"Seu nome de usuário\" />\n                    <TextField required ref={email} type=\"email\" variant='standard' label=\"Seu melhor email\" />\n                    <TextField required ref={pass} type=\"password\" variant='standard' label=\"Crie uma senha\" />\n                </Grid>\n\n                <Grid container item\n                    width=\"300px\"\n                    height=\"150px\"\n                >\n\n                    <span>Ao se registrar você concorda com os <a href=\"#\">termos de uso e política de privacidade</a></span>\n\n                    <Button onClick={validate} color=\"primary\" size=\"small\" variant=\"contained\" disableElevation>registrar</Button>\n\n                    <span>Já tem uma conta? <Link to=\"/login\">Então faça log in</Link></span>\n                </Grid>\n            </Grid>\n\n        </form>\n    )\n};\n\nexport default Register;","import * as React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport { useNavigate } from \"react-router-dom\";\n\n//Store imports\nimport { store } from '../store/store';\nimport { changeUser } from '../store/reducer';\n\nconst Login = () => {\n    let user = React.useRef();\n    let pass = React.useRef();\n    const navigate = useNavigate();\n    const data = store.getState().user;\n\n    const validate = () => {\n        const email = user.current.children[1].children[0].value;\n        const password = pass.current.children[1].children[0].value;\n\n        if (!email || !password) {\n            alert('Por favor preencha todos os campos!');\n        } else if (password.length < 8) {\n            alert('Senha muito curta! Precisa de 8 caracteres ou mais');\n        } else if ((email !== data.email && email !== data.user) && password !== data.password) {\n            alert('Usuário não registrado');\n        } else if ((email !== data.email && email !== data.user) || password !== data.password) {\n            alert('Senha incorreta');\n        }\n        else{\n            store.dispatch(changeUser(data.user, data.email, data.password))\n            navigate('../dashboard', { replace: true });\n        }\n    };\n\n    return (\n        <form className=\"login\">\n            <Grid container\n                className=\"container\"\n            >\n                <Grid container item\n                    className=\"inputs\"\n                    height=\"180px\"\n                >\n                    <TextField ref={user} required className=\"loginIpt\" type=\"text\" label=\"Email ou nome de usuário\" variant='standard' />\n                    <TextField ref={pass} required className=\"passwordIpt\" type=\"password\" label=\"Sua senha\" variant='standard' />\n                    <span><Link to=\"/\">Esqueceu sua senha?</Link></span>\n                </Grid>\n\n                <Grid container item\n                    className=\"buttons\"\n                    height=\"140px\"\n                >\n                    <Button onClick={validate} color=\"primary\" size=\"small\" variant=\"contained\" disableElevation>Log in</Button>\n\n                    <span>Não tem conta? <Link to=\"/signin\">Registre-se</Link></span>\n                </Grid>\n            </Grid>\n\n        </form>\n    )\n};\n\nexport default Login;","import * as React from 'react';\nimport { useNavigate } from \"react-router-dom\";\n//Store imports\nimport { store } from './store/store';\nimport { logOut } from './store/reducer';\n\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const data = store.getState().user;\n    const logout = () => {\n        store.dispatch(logOut());\n        navigate(\"/\", { replace: true })\n    }\n\n    if (data.user !== \"\" && data.isLogged === true) {\n        return (\n            <div className='dashboard'>\n                <h1>Bem vindo {data.user}!</h1>\n                <h4>Seu email é: {data.email}</h4>\n                <h4>Sua senha é: {data.password}</h4>\n                <button onClick={logout}>Log out</button>\n            </div>\n        )\n    } else {\n        return (\n            <div className='dashboard'>\n                <h1>Usuário não logado :(</h1>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;","import './style/style.css';\nimport * as React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Preload from './components/preload/index';\nimport Register from './components/preload/register';\nimport Login from './components/preload/login';\nimport Dashboard from './components/dashboard';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Routes>\n          <Route path='/' element={<Preload />} />\n          <Route path='signin' element={<Register />} />\n          <Route path='login' element={<Login />} />\n          <Route path='dashboard' element={<Dashboard />} />\n        </Routes>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\nimport { store, persistor } from './components/store/store';\nimport { Provider} from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <App store={store} persistor={persistor} />\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}